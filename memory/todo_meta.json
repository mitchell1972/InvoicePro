{
  "todos": {
    "Coordinator": {
      "1": {
        "id": "1",
        "content": "Set up development environment and fix npm permission issues",
        "details": "1. Configure npm to avoid permission errors. 2. Clean up any conflicting processes. 3. Ensure proper Node.js environment setup.",
        "status": "pending",
        "priority": "high"
      },
      "2": {
        "id": "2",
        "content": "Install and configure all application dependencies",
        "details": "1. Install frontend dependencies (React, Vite, Stripe, etc.). 2. Install backend dependencies (Vercel functions, Stripe SDK, etc.). 3. Resolve any version conflicts or vulnerabilities.",
        "status": "pending",
        "priority": "high"
      },
      "3": {
        "id": "3",
        "content": "Configure environment variables and application settings",
        "details": "1. Set up frontend environment variables (.env.local). 2. Configure backend environment variables for API functions. 3. Set up demo/development keys for Stripe and other services.",
        "status": "pending",
        "priority": "medium"
      },
      "4": {
        "id": "4",
        "content": "Start and test frontend application",
        "details": "1. Build and serve the React frontend using Vite. 2. Verify all pages load correctly. 3. Test routing and navigation. 4. Ensure responsive design works.",
        "status": "pending",
        "priority": "medium"
      },
      "5": {
        "id": "5",
        "content": "Start and test backend API services",
        "details": "1. Set up local development server for Vercel functions. 2. Test authentication endpoints. 3. Test invoice CRUD operations. 4. Test payment processing with Stripe. 5. Test email functionality.",
        "status": "pending",
        "priority": "medium"
      },
      "6": {
        "id": "6",
        "content": "Perform end-to-end application testing",
        "details": "1. Test complete user workflows (register, login, create invoice, send invoice, process payment). 2. Verify data persistence. 3. Test error handling and edge cases. 4. Ensure all integrations work properly.",
        "status": "pending",
        "priority": "low"
      }
    }
  }
}